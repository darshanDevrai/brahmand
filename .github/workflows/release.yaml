name: Release Pipeline

permissions:
  contents: write
  packages: write

on:
  push:
    tags:
      - 'v*'

jobs:
  generate_changelog:
    name: Generate and Commit Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Generate changelog via git-cliff
        uses: orhun/git-cliff-action@v4
        id: git_cliff
        with:
          config: cliff.toml
          args: ""
        env:
          OUTPUT: CHANGELOG.md

      - name: Commit updated changelog
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update CHANGELOG.md [skip ci]"
          file_pattern: CHANGELOG.md

  create_release:
    name: Create GitHub Release
    needs: generate_changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - id: create
        name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_and_upload:
    name: Build, Package & Upload Assets
    needs: [generate_changelog, create_release]
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build & cross-compile binaries
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.target }}
          args: "--locked --release"
          strip: true

      - name: Package artifacts (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p dist/${{ matrix.name }}
          tar -C target/${{ matrix.target }}/release -czf \
            dist/${{ matrix.name }}/brahmand-${{ matrix.name }}.tar.gz brahmand
          tar -C target/${{ matrix.target }}/release -czf \
            dist/${{ matrix.name }}/brahmand-client-${{ matrix.name }}.tar.gz brahmand-client

      - name: Package artifacts (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          # Ensure output directory exists
          New-Item -ItemType Directory -Path dist/${{ matrix.name }} -Force | Out-Null
          # Use PowerShell Compress-Archive to create ZIPs
          Compress-Archive -Path target/${{ matrix.target }}/release/brahmand.exe -DestinationPath dist/${{ matrix.name }}/brahmand-${{ matrix.name }}.zip -Force
          Compress-Archive -Path target/${{ matrix.target }}/release/brahmand-client.exe -DestinationPath dist/${{ matrix.name }}/brahmand-client-${{ matrix.name }}.zip -Force

      - name: Upload brahmand binary
        uses: softprops/action-gh-release@v2
        with:
          # upload_url: ${{ needs.create_release.outputs.upload_url }}
          files: dist/${{ matrix.name }}/brahmand-${{ matrix.name }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload brahmand-client binary
        uses: softprops/action-gh-release@v2
        with:
          # upload_url: ${{ needs.create_release.outputs.upload_url }}
          files: dist/${{ matrix.name }}/brahmand-client-${{ matrix.name }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
